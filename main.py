def battery_plus():
    
    #In this function, the assumption is this battery, B2, generates current in the same direction
    V_a = abs(float(input("What is the voltage of B1 in Volts: ")))
    V_b = abs(float(input("What is the voltage of B2 in Volts: ")))
    R_1 = abs(float(input("What is the resistance of R1 in Ohms: ")))
    R_2 = abs(float(input("What is the resistance of R2, in parallel with B2, in Ohms: ")))
    R_3 = abs(float(input("What is the resistance of R3, in series with B2, in Ohms:")))
    #There are three different currents in 3 total loops, but TWO different currents are generated by two different batteries
    #Use Kirchoff's Voltage Rule to produce 3 equations
    #1. V_a - I_1*R_1 - I_2*R_2 = 0, 2. V_a - I_1*R_1 - I_3*R_3 + V_b = 0, 3. V_b + I_2*R_2 - I_3*R_3 = 0
    #Using Kirchoff's Junction Rule, equation 4 is I_1 = I_2 + I_3
    #Substitute equation 4 into equation 2 through I_1, solve for I_2 in terms of I_3 from eq 3, and reinsert in equation 2
    #Algebra from there
    I_3 = (V_a*R_2 + V_b*R_2 - V_b*R_1)/(R_1*R_2 + R_2*R_3 + R_1*R_3)
    #With I_3 numerically defined, I_2 is easily solvable
    I_2 = I_3*(R_3/R_2) - (V_b/R_2)
    #Just for reference, I_1 = (V_a/R_1) - I_3*(R_3/R_1)
    #Remember, we want the current through the lone resistor, which is I_2
    
    return I_2
    
#def battery_moinus():
#def capacitor():
#def inductor():
def resistor():
    
    V = abs(float(input("What is the voltage of B1 in Volts: ")))
    R_1 = abs(float(input("What is the resistance of R1, in series with V, in Ohms: ")))
    R_2 = abs(float(input("What is the resistance of R2, in parallel to R3, in Ohms: ")))
    R_3 = abs(float(input("What is the resistance of R3, in parallel to R2, in Ohms: ")))
    #Use Kirchoff's Junction Rule, I_1 = I_2 + I_3
    #Kirchoff's Voltage Rule yields the rest of the equations.
    #The equations are 1. V - I_1*R_1 - I_2*R_2 = 0; 2. V - I_1*R_1 - I_3*R_3 = 0; 3. I_1 = I_2 + I_3
    I_1 = (V*R_2 + V*R_3)/(R_1*R_2 + R_2*R_3 + R_1*R_3)
    I_2 = (V - (I_1*R_1))/R_2
    
    return I_2

if __name__ == '__main__':
    
    #There is a simple circuit with one battery (B1) and two items in parallel. There is nothing else outside the parallel
    #Occupying one route is a resistor (R1). Using the menu, you get to choose the item across the resistor
    #Then the program will calculate the current flowing through the resistor as a function of time
    #As you can imagine, depending on what you choose...the current will behave differently
    #MENU--1: Battery w/ positive current; 2: Battery w/ negative current; 3: Capacitor; 4: Inductor; 5: Resistor; 6: Just Wire
    
    item_block = abs(int(input("Enter a number on the menu: ")))
    
    if item_block == 1:
        print("The current across R_2 is",battery_plus(),"Amperes.")
    #if item_block == 2:
    
    #if item_block == 3:
    
    #if item_block == 4:
        
    if item_block == 5:
        print("The current across R_2 is",resistor(),"Amperes.")
        
    if item_block == 6:
        print("")
        print("The current across R_2 is 0 Amperes.")
        #Most of the current of the circuit will attempt to pass through the path with the least resistance
        #If there is no resistance in the parallel opposite R_2, the current will skip it entirely, leaving I_2 = 0.
        
    else:
        print("Invalid input. Rerun the program.")